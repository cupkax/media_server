version: "3.9"
networks:
  medianetwrk:
    name: medianetwrk
    driver: bridge
    external: true

# Keys common to some of the core services that we always to automatically restart on failure
x-common-keys-core:
  &common-keys-core
  networks:
    - medianetwrk
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped

services:
  cloudflared:
    <<: *common-keys-core
    image: cloudflare/cloudflared
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel run --token {TUN_TOKEN}

  homepage:
    <<: *common-keys-core
    image: ghcr.io/benphelps/homepage:latest
    container_name: homepage
    ports:
      - 3000:3000
    volumes:
      - ${ROOT_DIR}:/mnt/data
      - ${ROOT_DIR}/docker/appdata/homepage:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock # (optional) For docker integrations
    restart: unless-stopped

  jellyfin:
    <<: *common-keys-core
    image: ghcr.io/hotio/jellyfin:latest
    container_name: jellyfin
    logging:
      driver: json-file
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/docker/appdata/jellyfin:/config
      - ${ROOT_DIR}:/data
    ports:
      - 8096:8096
    restart: unless-stopped

  #
  # SERVARR
  #
  notifiarr:
    <<: *common-keys-core
    container_name: notifiarr
    hostname: notifiarr
    image: golift/notifiarr
    volumes:
      - ${ROOT_DIR}/docker/appdata/notifiarr:/config
      - /var/run/utmp:/var/run/utmp
      - /etc/machine-id:/etc/machine-id
    ports:
      - 5454:5454
    restart: unless-stopped

  radarr:
    <<: *common-keys-core
    image: ghcr.io/hotio/radarr:testing
    container_name: radarr
    logging:
      driver: json-file
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/docker/appdata/radarr:/config
      - ${ROOT_DIR}:/data
    ports:
      - 7878:7878
    restart: unless-stopped

  sonarr:
    <<: *common-keys-core
    image: ghcr.io/hotio/sonarr:v4
    container_name: sonarr
    logging:
      driver: json-file
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/docker/appdata/sonarr:/config
      - ${ROOT_DIR}:/data
    ports:
      - 8989:8989
    restart: unless-stopped

  sonarr-anime:
    <<: *common-keys-core
    image: ghcr.io/hotio/sonarr:v4
    container_name: sonarr-anime
    logging:
      driver: json-file
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/docker/appdata/sonarr-anime:/config
      - ${ROOT_DIR}:/data
    ports:
      - 8990:8989
    restart: unless-stopped
  lidarr:
    <<: *common-keys-core
    container_name: lidarr
    image: ghcr.io/hotio/lidarr:nightly
    logging:
      driver: json-file
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/docker/appdata/lidarr:/config
      - ${ROOT_DIR}:/data
    ports:
      - 8686:8686

  readarr:
    <<: *common-keys-core
    image: ghcr.io/hotio/readarr:nightly
    container_name: readarr
    logging:
      driver: json-file
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/docker/appdata/readarr:/config
      - ${ROOT_DIR}:/data
    ports:
      - 8787:8787
    restart: unless-stopped

  prowlarr:
    <<: *common-keys-core
    image: ghcr.io/hotio/prowlarr:testing
    container_name: prowlarr
    logging:
      driver: json-file
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/docker/appdata/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped

  # Download Clients
  sabnzbd:
    <<: *common-keys-core
    image: ghcr.io/hotio/sabnzbd:testing
    container_name: sabnzbd
    hostname: 172.17.0.1
    logging:
      driver: json-file
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/docker/appdata/sabnzbd:/config
      - ${ROOT_DIR}/usenet:/data/usenet:rw
    ports:
      - 8081:8080
    restart: unless-stopped

# Temp disabled due to permission issues

##  qbittorrent:
##    image: lscr.io/linuxserver/qbittorrent:latest
##    container_name: qbittorrent
##    #hostname: 172.17.0.1
##    logging:
##      driver: json-file
##    environment:
##      - TZ=${TIMEZONE}
##      - WEBUI_PORT=8080
##    volumes:
##      - ${ROOT_DIR}/docker/appdata/qbittorrent:/config
##      - ${ROOT_DIR}/torrents:/data/torrents:rw
##    ports:
##      - 6882:6881
##      - 6882:6881/udp
##      - 8080:8080
##    restart: unless-stopped
##
